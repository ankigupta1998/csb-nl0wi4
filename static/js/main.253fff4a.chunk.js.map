{"version":3,"sources":["components/Comment.js","components/Loader.js","components/EndMsg.js","App.js","reportWebVitals.js","index.js"],"names":["Comment","item","id","email","body","className","style","minHeight","Loader","role","EndMsg","textAlign","App","useState","items","setItems","hasMore","sethasMore","page","setpage","useEffect","getComments","a","fetch","res","json","data","fetchComments","fetchData","commentsFormServer","length","dataLength","next","loader","endMessage","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAgBeA,MAdf,YAA+C,IAAD,IAA5BC,KAAQC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,KACjC,OACI,qBAAKC,UAAU,gBAAf,SACF,qBAAKA,UAAU,uBAAuBC,MAAO,CAAEC,UAAW,KAA1D,SACE,sBAAKF,UAAU,YAAf,UACE,qBAAIA,UAAU,4BAAd,kBAAgDH,KAChD,oBAAIG,UAAU,4CAAd,SAA2DF,IAC3D,mBAAGE,UAAU,YAAb,SAA0BD,YCcrBI,MArBf,WACI,OACI,qBAAKH,UAAU,YAAf,SACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,yCAAf,UAEE,qBAAKA,UAAU,gCAAgCI,KAAK,SAApD,SACE,sBAAMJ,UAAU,kBAAhB,0BAEF,qBAAKA,UAAU,gCAAgCI,KAAK,SAApD,SACE,sBAAMJ,UAAU,kBAAhB,0BAEF,qBAAKA,UAAU,gCAAgCI,KAAK,SAApD,SACE,sBAAMJ,UAAU,kBAAhB,kCCLDK,MARf,WACI,OACI,mBAAGJ,MAAO,CAAEK,UAAW,UAAvB,SACE,6DC8DKC,MA3Df,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEA,EAAwBJ,mBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACR,IAAMC,EAAW,uCAAG,8BAAAC,EAAA,sEACAC,MAAM,mEADN,cACZC,EADY,gBAMCA,EAAIC,OANL,OAMZC,EANY,OAOlBX,EAASW,GAPS,2CAAH,qDAUjBL,MACC,IAEH,IAAMM,EAAa,uCAAG,8BAAAL,EAAA,sEACFC,MAAM,uDAAD,OACkCL,EADlC,eADH,cACdM,EADc,gBAMDA,EAAIC,OANH,cAMdC,EANc,yBAObA,GAPa,2CAAH,qDAUbE,EAAS,uCAAG,4BAAAN,EAAA,sEACiBK,IADjB,OACVE,EADU,OAGhBd,EAAS,GAAD,mBAAKD,GAAL,YAAee,MACW,IAA9BA,EAAmBC,QAAgBD,EAAmBC,OAAS,KACjEb,GAAW,GAEbE,EAAQD,EAAO,GAPC,2CAAH,qDASf,OACE,cAAC,IAAD,CACEa,WAAYjB,EAAMgB,OAClBE,KAAMJ,EACNZ,QAASA,EACTiB,OAAQ,cAAC,EAAD,IACRC,WAAY,cAAC,EAAD,IALd,SAOE,qBAAK7B,UAAU,YAAf,SACE,qBAAKA,UAAU,UAAf,SACGS,EAAMqB,KAAI,SAAClC,GACV,OAAO,cAAC,EAAD,CAAuBA,KAAMA,GAAfA,EAAKC,cC/CvBkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.253fff4a.chunk.js","sourcesContent":["\n\nfunction Comment({item: { id, email, body }}) {\n    return (\n        <div className=\"col-sm-4 my-2\" >\n      <div className=\"card shadow-sm w-100\" style={{ minHeight: 225 }}>\n        <div className=\"card-body\">\n          <h5 className=\"card-title text-center h2\">Id : {id}</h5>\n          <h6 className=\"card-subtitle mb-2 text-muted text-center\">{email}</h6>\n          <p className=\"card-text\">{body}</p>\n        </div>\n      </div>\n    </div>\n    )\n}\n\nexport default Comment\n","\n\nfunction Loader() {\n    return (\n        <div className=\"container\">\n          <div className=\"row \">\n            <div className=\"col d-flex justify-content-center my-5\">\n              \n              <div className=\"spinner-grow text-primary m-1\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </div>\n              <div className=\"spinner-grow text-primary m-1\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </div>\n              <div className=\"spinner-grow text-primary m-1\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </div>\n            </div>\n          </div>\n        </div>\n    )\n}\n\nexport default Loader\n","\n\nfunction EndMsg() {\n    return (\n        <p style={{ textAlign: \"center\" }}>\n          <b>Yay! You have seen it all</b>\n        </p>\n    )\n}\n\nexport default EndMsg\n","import \"./App.css\";\n\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useEffect, useState } from \"react\";\nimport Comment from \"./components/Comment\";\nimport Loader from \"./components/Loader\";\nimport EndMsg from \"./components/EndMsg\";\n\nfunction App() {\n  const [items, setItems] = useState([]);\n\n  const [hasMore, sethasMore] = useState(true);\n\n  const [page, setpage] = useState(2);\n\n  useEffect(() => {\n    const getComments = async () => {\n      const res = await fetch(\n        `https://jsonplaceholder.typicode.com/comments?_page=1&_limit=20`\n        // For json server use url below\n        // `http://localhost:3004/comments?_page=1&_limit=20`\n      );\n      const data = await res.json();\n      setItems(data);\n    };\n\n    getComments();\n  }, []);\n\n  const fetchComments = async () => {\n    const res = await fetch(\n      `https://jsonplaceholder.typicode.com/comments?_page=${page}&_limit=20`\n      // For json server use url below\n      // `http://localhost:3004/comments?_page=${page}&_limit=20`\n    );\n    const data = await res.json();\n    return data;\n  };\n\n  const fetchData = async () => {\n    const commentsFormServer = await fetchComments();\n\n    setItems([...items, ...commentsFormServer]);\n    if (commentsFormServer.length === 0 || commentsFormServer.length < 20) {\n      sethasMore(false);\n    }\n    setpage(page + 1);\n  };\n  return (\n    <InfiniteScroll\n      dataLength={items.length} //This is important field to render the next data\n      next={fetchData}\n      hasMore={hasMore}\n      loader={<Loader />}\n      endMessage={<EndMsg />}\n    >\n      <div className=\"container\">\n        <div className=\"row m-2\">\n          {items.map((item) => {\n            return <Comment key={item.id} item={item} />;\n          })}\n        </div>\n      </div>\n    </InfiniteScroll>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}